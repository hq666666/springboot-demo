#J2Cache Configuration


##################################
# Cache Broadcast Method :缓存广播方法
# values:
# jgroups -> use jgroups's multicast ：使用jgroups 多路广播
# redis -> use redis publish/subscribe mechanism 使用Redis发布订阅机制
# none -> don't notify the other nodes in cluster：不要通知集群中的其他节点
# xx.xxxx.xxxx.Xxxxx your own cache broadcast policy classname that implement net.oschina.j2cache.ClusterPolicy
####################################

j2cache.broadcast = none
#组播的通道名称
jgroups.channel.name = j2cache\
jgroups.configXml = /network.xml\
        
#############################
# Level 1&2 provider
# values:
# none -> disable this level cache :禁止这级别缓存
# ehcache -> use ehcache2 as level 1 cache  ：使用ehcache2作为一级缓存
# ehcache3 -> use ehcache3 as level 1 cache ：使用ehcache3作为一级缓存
# caffeine -> use caffeine as level 1 cache(only in memory)：使用caffeine作为一级缓存(仅在内存中)
# redis -> use redis(hashs) as level 2 cache：使用Redis(hash)z作为二级缓存
# readonly-redis -> use redis as level 2 cache ,but never write data to it. if use this provider, you must uncomment `j2cache.L2.config_section` to make the redis configurations available.：使用redis作为二级缓存，但决不向其写入数据。如果使用此提供程序，则必须取消注释' j2cache.L2。config_section '使redis配置可用
# [classname] -> use custom provider
##################################

#配置一二级缓存的提供程序的类
j2cache.L1.provider_class = none
j2cache.L2.provider_class = none

# When L2 provider isn't `redis`, using `L2.config_section = redis` to read redis configurations  ：当L2提供者不是“redis”时，使用“L2”.config_section = redis '来读取redis配置

# Enable/Disable ttl in redis cache data (if disabled, the object in redis will never expire): 在redis缓存数据中启用/禁用ttl(如果禁用，redis中的对象将永远不会过期):

#开启将ttl同步到redis
j2cache.sync_ttl_to_redis = true

# Whether to cache null objects by default :是否默认缓存空对象
j2cache.default_cache_null_object = true

#########################
# Cache Serialization Provider : 缓存序列化提供者
# values:
# fst -> fast-serialization ：快速序列化
# kyro -> kyro
# java -> java standard
# [classname implements Serializer]
##################################

#配置缓存序列化的提供者
j2cache.serialization = fst

##################
# Ehcache configuration
###################

ehcache.configXml = /ehcache.xml

ehcache3.configXml = /ehcache3.xml
#设置默认堆的大小
ehcache3.defaultHeapSize = 1000

#########################################
# Caffeine configuration
# caffeine.region.[name] = size, xxxx[s|m|h|d]
#
#########################################

#Caffeine是基于JAVA 1.8 Version的高性能缓存库。Caffeine提供的内存缓存使用参考Google guava的API。Caffeine是基于Google Guava Cache设计经验上改进的成果。
caffeine.properties = /caffeine.properties

#########################################
# Redis connection configuration
#########################################

#########################################
# Redis Cluster Mode
#
# single -> single redis server :单台Redis服务器
# sentinel -> master-slaves servers ：主从Redis服务器
# cluster -> cluster servers (数据库配置无效，使用 database = 0）
# sharded -> sharded servers  (密码、数据库必须在 hosts 中指定，且连接池配置无效 ; redis://user:password@127.0.0.1:6379/0）
#
#########################################

redis.mode =single

#redis storage mode
redis.storage = generic

#redis pub/sub channel name
redis.channel = j2cache
## redis pub/sub server (using redis.hosts when empty)
redis.channel.host =

#cluster name just for sharded
redis.cluster_name = j2cache

## redis cache namespace optional, default[j2cache]
redis.namespace =

## connection
#redis.hosts = 127.0.0.1:6379
#redis.timeout = 2000
#redis.password =
#redis.database = 0

## redis pool properties
redis.maxTotal = 100
redis.maxIdle = 10
redis.maxWaitMillis = 5000
redis.minEvictableIdleTimeMillis = 60000
redis.minIdle = 1
redis.numTestsPerEvictionRun = 10
redis.lifo = false
redis.softMinEvictableIdleTimeMillis = 10
redis.testOnBorrow = true
redis.testOnReturn = false
redis.testWhileIdle = true
redis.timeBetweenEvictionRunsMillis = 300000
redis.blockWhenExhausted = false
redis.jmxEnabled = false